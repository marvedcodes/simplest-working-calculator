{"version":3,"sources":["App.js","index.js"],"names":["App","inputRef","useRef","resultRef","useState","result","setResult","className","ref","pattern","type","placeholder","onClick","e","preventDefault","Number","current","value","prevVal","rootElement","document","getElementById","createRoot","render"],"mappings":"2LA8DeA,MA3Df,WACE,IAAMC,EAAWC,iBAAO,MAClBC,EAAYD,iBAAO,MACzB,EAA4BE,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAgCA,OACE,sBAAKC,UAAU,MAAf,UACE,8BACE,+DAEF,iCACE,mBAAGC,IAAKL,EAAR,SAAoBE,IACpB,uBACEI,QAAQ,QACRD,IAAKP,EACLS,KAAK,SACLC,YAAY,kBAEd,wBAAQC,QA3Cd,SAAcC,GACZA,EAAEC,iBACFR,GAAU,SAACD,GAAD,OAAYA,EAASU,OAAOd,EAASe,QAAQC,MAA7C,GACX,EAwCK,iBACA,wBAAQL,QAvCd,SAAeC,GACbA,EAAEC,iBACFR,GAAU,SAACD,GAAD,OAAYA,EAASU,OAAOd,EAASe,QAAQC,MAA7C,GACX,EAoCK,sBACA,wBAAQL,QAnCd,SAAeC,GACbA,EAAEC,iBACFR,GAAU,SAACD,GAAD,OAAYA,EAASU,OAAOd,EAASe,QAAQC,MAA7C,GACX,EAgCK,sBACA,wBAAQL,QA/Bd,SAAgBC,GACdA,EAAEC,iBACFR,GAAU,SAACD,GAAD,OAAYA,EAASU,OAAOd,EAASe,QAAQC,MAA7C,GACX,EA4BK,oBACA,wBAAQL,QA3Bd,SAAoBC,GAClBA,EAAEC,iBACFb,EAASe,QAAQC,MAAQ,CAC1B,EAwBK,yBACA,wBAAQL,QAvBd,SAAqBC,GACnBA,EAAEC,iBACFR,GAAU,SAACY,GAAD,OAAuB,EAAVA,CAAb,GACX,EAoBK,+BAIP,ECvDKC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,M","file":"static/js/main.7213f062.chunk.js","sourcesContent":["import { useState, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const inputRef = useRef(null);\n  const resultRef = useRef(null);\n  const [result, setResult] = useState(0);\n\n  function plus(e) {\n    e.preventDefault();\n    setResult((result) => result + Number(inputRef.current.value));\n  }\n\n  function minus(e) {\n    e.preventDefault();\n    setResult((result) => result - Number(inputRef.current.value));\n  }\n\n  function times(e) {\n    e.preventDefault();\n    setResult((result) => result * Number(inputRef.current.value));\n  }\n\n  function divide(e) {\n    e.preventDefault();\n    setResult((result) => result / Number(inputRef.current.value));\n  }\n\n  function resetInput(e) {\n    e.preventDefault();\n    inputRef.current.value = 0;\n  }\n\n  function resetResult(e) {\n    e.preventDefault();\n    setResult((prevVal) => prevVal * 0);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Simplest Working Calculator</h1>\n      </div>\n      <form>\n        <p ref={resultRef}>{result}</p>\n        <input\n          pattern=\"[0-9]\"\n          ref={inputRef}\n          type=\"number\"\n          placeholder=\"Type a number\"\n        />\n        <button onClick={plus}>add</button>\n        <button onClick={minus}>subtract</button>\n        <button onClick={times}>multiply</button>\n        <button onClick={divide}>divide</button>\n        <button onClick={resetInput}>reset input</button>\n        <button onClick={resetResult}>reset result</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}